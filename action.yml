name: 'Enigma Docker Build and Publish'
description: 'Builds, scans, tags, and pushes Docker images using the Enigma tool'

inputs:
  command:
    description: 'Command to run (bake or publish)'
    required: true
  enigma_file:
    description: 'env file to set values in workflow'
    required: true
  DOCKER_IMAGE:
    description: 'Docker image name'
    required: true
  DOCKER_TAG:
    description: 'Docker image tag'
    required: true
  DOCKER_CLEANUP:
    description: 'Cleanup after push (true or false)'
    required: false
    default: 'false'
  AWS_REGION:
    description: 'AWS Region'
    required: false
  AWS_ACCOUNT_ID:
    description: 'AWS Account ID'
    required: false
  GCP_PROJECT_ID:
    description: 'GCP Project ID'
    required: false
  GCP_REGION:
    description: 'GCP Region'
    required: false
  DOCKER_USERNAME:
    description: 'Docker Hub username'
    required: false
  DOCKER_PASSWORD:
    description: 'Docker Hub password'
    required: false
  TOKEN:
    description: 'GitHub Token'
    required: false
  GITHUB_USERNAME:
    description: 'GitHub Username'
    required: false
  AZURE_REGISTRY_NAME:
    description: 'Azure Registry name.'
    required: false
  AZURE_CLIENT_ID:
    description: 'Client ID'
    required: false
  AZURE_TENANT_ID:
    description: 'Tenant ID'
    required: false
  AZURE_CLIENT_SECRET:
    description: 'Client Secret'
    required: false
  DOCKERFILE_PATH:
    description: 'Path to the Dockerfile'
    required: false
    default: './Dockerfile'
  DOCKER_BUILD_ARCHITECTURE:
    description: 'Build Architecture'
    required: false
    default: 'amd64'
  DOCKER_BUILD_ARGS:
    description: 'Additional build arguments for Docker build'
    required: false
  DOCKER_NO_CACHE:
    description: 'Set to true to disable Docker cache'
    required: false
    default: 'false'

runs:
  using: 'docker'
  image: 'docker://ghcr.io/clouddrove/enigma:v0.0.15'
  env:
    DOCKER_IMAGE: ${{ inputs.DOCKER_IMAGE }}
    DOCKER_TAG: ${{ inputs.DOCKER_TAG }}
    AWS_ACCOUNT_ID: ${{ inputs.AWS_ACCOUNT_ID }}
    AWS_REGION: ${{ inputs.AWS_REGION }}
    GCP_PROJECT_ID: ${{ inputs.GCP_PROJECT_ID }}
    GCP_REGION: ${{ inputs.GCP_REGION }}
    DOCKER_CLEANUP: ${{ inputs.DOCKER_CLEANUP }}
    DOCKER_USERNAME: ${{ inputs.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ inputs.DOCKER_PASSWORD }}
    TOKEN: ${{ inputs.TOKEN }}
    GITHUB_USERNAME: ${{ inputs.GITHUB_USERNAME }}
    AZURE_REGISTRY_NAME: ${{ inputs.AZURE_REGISTRY_NAME }}
    AZURE_CLIENT_ID: ${{ inputs.AZURE_CLIENT_ID }}
    AZURE_TENANT_ID: ${{ inputs.AZURE_TENANT_ID }}
    AZURE_CLIENT_SECRET: ${{ inputs.AZURE_CLIENT_SECRET }}
    DOCKERFILE_PATH: ${{ inputs.DOCKERFILE_PATH }}
    DOCKER_BUILD_ARCHITECTURE: ${{ inputs.DOCKER_BUILD_ARCHITECTURE }}
    DOCKER_BUILD_ARGS: ${{ inputs.DOCKER_BUILD_ARGS }}
    DOCKER_NO_CACHE: ${{ inputs.DOCKER_NO_CACHE }}
  args:
    - '--enigmafile=${{ inputs.enigma_file }}'
    - ${{ inputs.command }}